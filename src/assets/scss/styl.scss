    @import './variables';
    * {
        //移动端必备
        box-sizing: border-box;
        // 不要高亮之类的
        outline: none;
    }
    
    html {
        //文字基础的页面大小
        font-size: 13px;
    }
    
    body {
        margin: 0;
        //字体 优先Arial Helvetica是苹果上的 sans-serif非衬线字体
        font-family: Arial, Helvetica, sans-serif;
        //行高
        line-height: 1.2em;
        // 背景色
        background-color: #f1f1f1;
        -webkit-font-smoothing: antialiased;
    }
    
    a {
        color: #999;
    }
    
    p {
        line-height: 1.5rem;
        ;
    }
    
    //定义颜色colors
    //定义成变量
    @each $colorKey,
    $color in $colors {
        .text-#{$colorKey} {
            color: $color;
        }
        .bg-#{$colorKey} {
            background-color: $color;
        }
    }
    
    //text align
    //对齐方式
    @each $var in (left, center, right) {
        .text-#{$var} {
            text-align: $var!important;
        }
    }
    
    //font size
    @each $sizeKey,
    $size in $font-sizes {
        .fs-#{$sizeKey} {
            font-size: $size * $base-font-size;
            //遍历font-sizes里面的内容 每项为size
        }
    }
    
    //text overflow 省略
    .text-ellipsis {
        display: inline-block;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    
    //.通用flex布局样式定义（flex）
    .d-flex {
        display: flex;
    }
    
    //表示从上到下的
    .flex-column {
        flex-direction: column;
    }
    
    //表示flex布局可自己换行
    .flex-wrap {
        flex-wrap: wrap;
    }
    
    //主轴定义方式
    @each $key,
    $value in $flex-jc {
        .jc-#{$key} {
            justify-content: $value;
        }
    }
    
    //stretch交叉轴？？
    @each $key,
    $value in $flex-ai {
        .ai-#{$key} {
            align-items: $value;
        }
    }
    
    .flex-1 {
        flex: 1;
    }
    
    //表示增长是1，会自己向右铺满
    .flex-grow-1 {
        flex-grow: 1;
    }
    
    // 常用边距定义（margin，padding）
    //0-5:0
    //.m-t => margin-top  .pb-2
    @each $typeKey,
    $type in $spacing-types {
        @each $directionKey,
        $direction in $spacing-directions {
            @each $sizeKey,
            $size in $spacing-sizes {
                //mt-1{}
                .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                    #{$type}-#{$direction}: $size * $spacing-base-size;
                }
            }
        }
    }
    
    //.m-1 p-0
    @each $typeKey,
    $type in $spacing-types {
        @each $sizeKey,
        $size in $spacing-sizes {
            .#{$typeKey}-#{$sizeKey} {
                #{$type}: $size * $spacing-base-size;
            }
        }
    }
    
    //.mx-1
    @each $typeKey,
    $type in $spacing-types {
        @each $sizeKey,
        $size in $spacing-sizes {
            .#{$typeKey}x-#{$sizeKey} {
                #{$type}-left: $size * $spacing-base-size;
                #{$type}-right: $size * $spacing-base-size;
            }
            //.my-1
            .#{$typeKey}y-#{$sizeKey} {
                #{$type}-top: $size * $spacing-base-size;
                #{$type}-bottom: $size * $spacing-base-size;
            }
        }
    }
    
    ;
    //.rt .lt .rb
    @each $directionKey,
    $direction in $spacing-directions {}
    
    //按钮的边框
    .btn {
        border: none;
        border-radius: 0.1538rem;
        font-size: map-get($font-sizes, 'sm') * $base-font-size;
        padding: 0.2rem 0.6rem;
    }
    
    .nav {
        display: flex;
        //这里表示是高亮的下面边框就是白色 不是的就改成透明 不然不对其
        .nav-item {
            border-bottom: 3px solid transparent;
            //& 因为他们不是上下级关系 而是同级的
            padding-bottom: 0.2rem;
            &.active {
                color: map-get($colors, 'primary');
                border-bottom-color: map-get($colors, 'primary');
            }
        }
        &.nav-inverse {
            .nav-item {
                color: map-get($colors, 'white');
                &.active {
                    border-bottom-color: map-get($colors, 'white');
                }
            }
        }
    }
    
    //width,height
    .w-100 {
        width: 100%;
    }
    
    .h-100 {
        height: 100%;
    }
    
    //精灵图
    .sprite {
        background: url('../images/index.png') no-repeat 0 0;
        background-size: 26.785714rem;
        //一定得设置宽高 所以得用inline-block
        display: inline-block;
        &.sprite-news {
            width: 1.642857rem;
            height: 1.5385rem;
            background-position: 63.546% 15.517%;
        }
        &.sprite-story {
            width: 1.642857rem;
            height: 1.428571rem;
            background-position: 90.483% 15.614%;
        }
        &.sprite-arrow {
            width: 0.7692rem;
            height: 0.7692rem;
            background-position: 38.577% 52.076%;
        }
    }
    
    //borders
    @each $dir in (top,
    right,
    bottom,
    left) {
        .border-#{$dir} {
            border-#{$dir}: 1px solid $border-color;
        }
    }